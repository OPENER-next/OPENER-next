name: Build app for target platforms

on:
  # Trigger workflow when new tag is pushed.
  push:
    tags:
      - 'v*'
  # Allow running this workflow manually from the Actions tab.
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent build and deployment workflow
concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install yq
      run: pip3 install yq

    - name: Read Flutter version from pubspec.yaml
      id: flutterVersion
      run: |
        echo "result=$(yq -r .environment.flutter pubspec.yaml)" >> $GITHUB_OUTPUT 

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.flutterVersion.outputs.result }}
        channel: 'stable'

    - name: Check Flutter version
      run: flutter --version

    - name: Download pub dependencies
      run: flutter pub get

    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Create Android keystore file
      run: echo -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > key.jks

    # See: https://docs.flutter.dev/deployment/android#reference-the-keystore-from-the-app
    # The key store and key password should be identical according to
    # https://developer.android.com/studio/publish/app-signing#generate-key
    # Don't touch: Keep the line breaks as they are even though it's ugly
    - name: Create key.properties
      run: |-
        echo -e "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
        storeFile=$(readlink -f key.jks)" >> android/key.properties

    - name: Build App Bundle
      run: >-
        flutter build appbundle
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
        --dart-define=IS_RELEASE=true
        --flavor standard

    - name: Build APK
      run: >-
        flutter build apk
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
        --dart-define=IS_RELEASE=true
        --flavor standard

    - name: Upload App Bundle artifact
      uses: actions/upload-artifact@v3
      with:
        name: Android App Bundle
        path: build/app/outputs/bundle/standardRelease/app-standard-release.aab

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: Android APK
        path: build/app/outputs/flutter-apk/app-standard-release.apk

  build_ios:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install yq
      run: pip3 install yq

    - name: Read Flutter version from pubspec.yaml
      id: flutterVersion
      run: |
        echo "result=$(yq -r .environment.flutter pubspec.yaml)" >> $GITHUB_OUTPUT 

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.flutterVersion.outputs.result }}
        channel: 'stable'

    - name: Download pub dependencies
      run: flutter pub get

    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Build iOS Bundle
      run: >-
        flutter build ios
        --release --no-codesign
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
        --dart-define=IS_RELEASE=true

    - name: Upload iOS Bundle artifact
      uses: actions/upload-artifact@v3
      with:
        name: iOS App
        path: build/ios/iphoneos

  build_web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install yq
        run: pip3 install yq

      - name: Read Flutter version from pubspec.yaml
        id: flutterVersion
        run: |
          echo "result=$(yq -r .environment.flutter pubspec.yaml)" >> $GITHUB_OUTPUT 

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.flutterVersion.outputs.result }}
          channel: 'stable'

      - name: Download pub dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build web
        run: >-
          flutter build web
          --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
          --dart-define=IS_RELEASE=true

      - name: Upload web artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'build/web'

  deploy_web:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_web
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
