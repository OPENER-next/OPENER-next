name: Build app for target platforms

on:
  # Trigger workflow when new tag is pushed.
  push:
    tags:
      - 'v*'
  # Allow running this workflow manually from the Actions tab.
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup latest stable Flutter
      uses: subosito/flutter-action@v2
      with:
        # Use a fixed Flutter version (instead of latest) to ensure a more deterministic building process
        # When changing the Flutter version make sure to also update it in the F-Droid repository
        # https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/de.tu_chemnitz.etit.sse.openstop.yml
        flutter-version: '3.3.7'
        channel: 'stable'

    - name: Check Flutter version
      run: flutter --version

    - name: Download pub dependencies
      run: flutter pub get

    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Create Android keystore file
      run: echo -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > key.jks

    # See: https://docs.flutter.dev/deployment/android#reference-the-keystore-from-the-app
    # The key store and key password should be identical according to
    # https://developer.android.com/studio/publish/app-signing#generate-key
    # Don't touch: Keep the line breaks as they are even though it's ugly
    - name: Create key.properties
      run: |-
        echo -e "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
        storeFile=$(readlink -f key.jks)" >> android/key.properties

    - name: Build app bundle
      run: >-
        flutter build appbundle
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
        --dart-define=IS_RELEASE=true
        --flavor standard

    - name: Build apk
      run: >-
        flutter build apk
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
        --dart-define=IS_RELEASE=true
        --flavor standard

    - name: Upload App Bundle artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Android App Bundle
        path: build/app/outputs/bundle/standardRelease/app-standard-release.aab

    - name: Upload APK artifact 
      uses: actions/upload-artifact@v2
      with:
        name: Android APK
        path: build/app/outputs/flutter-apk/app-standard-release.apk

  build_ios:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v2
      with:
        # Use a fixed Flutter version (instead of latest) to ensure a more deterministic building process
        # When changing the Flutter version make sure to also update it in the F-Droid repository
        # https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/de.tu_chemnitz.etit.sse.openstop.yml
        flutter-version: '3.3.7'
        channel: 'stable'

    - run: flutter pub get
    
    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs
    
    - run: >-
        flutter build ios
        --release --no-codesign
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
        --dart-define=IS_RELEASE=true

    # Upload generated .app folder to the artifacts.
    - uses: actions/upload-artifact@v2
      with:
        name: iOS App
        path: build/ios/iphoneos

  build_web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Pages
        uses: actions/configure-pages@v2
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          # Use a fixed Flutter version (instead of latest) to ensure a more deterministic building process
          flutter-version: '3.3.7'
          channel: 'stable'
          
      - name: Download pub dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs
        
      - name: Build web
        run: >-
          flutter build web
          --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }}
          --dart-define=IS_RELEASE=true

      - name: Create and upload web artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'build/web'
          
  deploy_web:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build_web
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
