name: Build app for iOS

on:
  # Trigger workflow when new tag is pushed.
  push:
  #  tags:
  #    - 'v*'
  # Allow running this workflow manually from the Actions tab.
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent build and deployment workflow
concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build_ios:
    runs-on: macos-latest

    env:
      BUILD_CERTIFICATE_BASE64: ${{ secrets.APPLE_DISTRIBUTION_CERT_BASE64 }}
      P12_PASSWORD: ${{ secrets.APPLE_DISTRIBUTION_CERT_PASSWORD }}
      BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.APPLE_MOBILEPROVISION_BASE64 }}
      KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      BUILD_EXPORTOPTIONS_BASE64: ${{ secrets.APPLE_EXPORTOPTIONS_BASE64 }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install yq
      run: pip3 install yq

    - name: Read Flutter version from pubspec.yaml
      id: flutterVersion
      run: |
        echo "result=$(yq -r .environment.flutter pubspec.yaml)" >> $GITHUB_OUTPUT

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ steps.flutterVersion.outputs.result }}
        channel: 'stable'

    - name: Download pub dependencies
      run: flutter pub get

    - name: Install Apple certificate and provisioning profile
      run: |
        # Create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        
        # Import certificate and provisioning profile
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        
        # Create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # Apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Run build_runner
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Create IPA
      run: |
        # Set path to and import ExportOptions.plist
        EXPORTOPTIONS_PATH=$RUNNER_TEMP/ExportOptions.plist
        echo -n "$BUILD_EXPORTOPTIONS_BASE64" | base64 --decode --output $EXPORTOPTIONS_PATH

        # Build IPA
        flutter build ipa \
        --release \
        --dart-define=THUNDERFOREST_API_KEY=${{ secrets.THUNDERFOREST_API_KEY }} \
        --dart-define=IS_RELEASE=true \
        --export-options-plist=$EXPORTOPTIONS_PATH

    - name: Upload IPA artifact
      uses: actions/upload-artifact@v3
      with:
        name: iOS App ${{ github.ref_name }}
        path: build/ios/ipa/*.ipa

    - name: Clean up keychain and provisioning profile
      if: ${{ always() }}
      run: |
        security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
        rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
